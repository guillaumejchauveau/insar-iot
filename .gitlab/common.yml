.image_vars_script: &image_vars_script
  # Define image tags.
  - |
    if [[ -z "$CI_COMMIT_TAG" ]]; then
      export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
      export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    else
      export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
      export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
    fi
    export image_previous="$CI_APPLICATION_REPOSITORY$IMAGE_SUFFIX:$CI_COMMIT_BEFORE_SHA"
    export image_tagged="$CI_APPLICATION_REPOSITORY$IMAGE_SUFFIX:$CI_APPLICATION_TAG"
    export image_latest="$CI_APPLICATION_REPOSITORY$IMAGE_SUFFIX:latest"

.build_job:
  stage: build
  image: registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image:v1.19.0
  variables:
    IMAGE_PLATFORM: "linux/amd64"
  script:
    - *image_vars_script
    # Log into the GitLab Registry and Dependency Proxy.
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - echo "$CI_DEPENDENCY_PROXY_PASSWORD" | docker login -u "$CI_DEPENDENCY_PROXY_USER" --password-stdin "$CI_DEPENDENCY_PROXY_SERVER"
    # Ensure execution of other binary formats is enabled in the kernel
    - update-binfmts --enable
    - docker buildx create --driver docker-container --use
    # Build and push the image.
    - |
      docker buildx build \
      --platform $IMAGE_PLATFORM \
      --cache-from "$image_previous" \
      --cache-from "$image_latest" \
      --tag "$image_tagged" \
      --tag "$image_latest" \
      --progress=plain \
      --push \
      . 2>&1
